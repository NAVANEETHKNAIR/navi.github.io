Pay attention to the spaces. Your answer should exactly match the correct Python output.

 my_list = [[2,3],[6,5],[10,9]]
print(my_list[0:2])
  

  unanswered  [[2,3],[6,5]]

my_list = []
for m in range(0,2):
    new_list = []
    for k in range(2,4):
        new_list.append(k)
    my_list.append(new_list)
print(my_list)
  

  unanswered  [[2,3],[2,3]]

my_list = []
for k in range(1,101,10):
    my_list.append(k)
print (my_list[: :3] )

  unanswered  [1,31,61,91]

my_list = [2, 3, 4]
for k in range (3):
    my_list.insert(-k, k+1)
print(my_list)

  unanswered  [1,2,3,3,2,4]

def my_fun(x):
    for k in range (len(x)):
        x.extend(x[:k])
m = [2,4,3]
my_fun(m)
print(m)

  unanswered  [2,4,3,2,2,4]

def my_fun(a):
    a[0] = 'new name'     
    a[1] = 'john'      

x = ['old name', 'jack']
my_fun(x)
print (x)

  unanswered  ['new name','john']

my_list = [[3,2],[2,6,4]]
x = 0
new_list=[]
for m in range(len(my_list)):
    for k in range(len(my_list[m])):
        x =  my_list[m][k]
        new_list.append(x)
        
print(new_list)
  

  unanswered  [3,2,2,6,4]

m = 0
my_str_1 = "car"
my_str_2 = "cat"
for char_1 in my_str_1:
    for char_2 in my_str_2:
        if char_1 != char_2:
            m = m + 1
print([m])

  unanswered  [7]
x = "bye bob"
print ([x.strip("b")])
  

  unanswered  ['ye bo']
m = 0
for x in range (4,6):
   for y in range (2,4):
      m = m + x + y
print ([m])

  unanswered  [28]
  
  
  Pay attention to the spaces. Your answer should exactly match the correct Python output.

 x = "mississipi"
print (x.replace('i','z',2))
  

  unanswered  
mzsszssipi
 x = ["duck", "car", "pet"]
print ("AA".join(x))
  

  unanswered  
duckAAcarAApet
 k = 10
while k > 2:
    x = k / 3
    k = k - 1
print(x)

  unanswered  
1.0
 numbers={"one": [1,"uno"], "two": [2,"dos"]}
print (numbers["one"][1][2])

  unanswered  
o
 d={1:"one", "two": 2 , 3: "tres"}
print (d["tres"])
  

  unanswered  
Error
 my_string = "x = {0:#^7d} and y = {1:@>8.3f}".format(5, 0.3)
print (my_string)
  

  unanswered  
x = ###5### and y = @@@0.300
 print('A{0:B^9}C'.format('dog'))
  

  unanswered  
ABBBdogBBBC
 def my_fun(x):
    z = 0
    for item in x:
        m = x.count(item)
        if m > z:
            z = m
    return z

y = ["cat", 4, "dog" , "cat" , 2, "cat", 2]
print (my_fun(y))

  unanswered  
3
 list_1 = ["cat", 3, "cat" , 25, 12]
list_2 = ["car", 25, "dog" , 43]
count = 0
for item in list_1:
    if item in list_2:
        count = count + 1
print (count)

  unanswered  
1
 print('{0:,}'.format(12345678))
  

  unanswered  
12,345,678


Write a function named my_final_grade_calculation that receives a file name and returns a dictionary that tells whether a student in this course passed or failed based on the following criteria. 

Each line of the file will have the format:

name, q1, q2, q3, q4, q5, q6, a1, a2, a3, a4, midterm, final
where
name is a string
q1 through q6 are quiz scores (integers)
a1 through a4 are assignment scores (integers values)
midterm is midterm score (integer)
final is final exam score (integer)
For example, if the content of the file looks like this:
tom, 10, 20, 0, 100, 0, 100, 70, 80, 90, 0, 80, 85
mary, 0, 50, 66, 40, 10, 60, 70, 80, 90, 100, 80, 85
joan, 0, 80, 40, 10, 50, 60, 7, 80, 90, 0, 80, 5
Note that there may be additional spaces between the entries in each line. 

Your function should return a dictionary such as:
{"tom":"pass", "mary":"pass", "joan":"fail"} 
Notes:
Two of the lowest quizzes should be dropped and the average of the remaining four quizzes is worth 25% of the total grade.
The lowest assignment score should be dropped and the average of the remaining three assignments is worth 25% of the total grade.
Midterm and final exams are each 25% of the total grade.
Calculate the total score of the student and if the total score is greater than or equal to 60 (totalscore >= 60) then the student has passed. Notice that the keys (names) and the values (pass or fail) of the dictionary should be all lower cased with no spaces in any of them.


 
################### Instructor function ###################
def my_final_grades_sample_f(file_name):
    fp = open(file_name, "r")
    data = fp.readlines()
    my_dictionary = {}
    for x in range(0, len(data)):
        stripped = data[x].strip().split(',')
        for x in range(1, len(stripped)):
            stripped[x] = int(stripped[x].strip())

        # extract various parts from each line
        name = stripped[0].lower()
        quizzes = stripped[1:7]
        assignments = stripped[7:11]
        midterm = int(stripped[11])
        final = int(stripped[12])

        # deal with the quizzes # remove the two minimum quizzes
        quizzes.remove(min(quizzes))
        quizzes.remove(min(quizzes))

        # deal with the assignments # remove one of the minimum assignment
        assignments.remove(min(assignments))

        # calculate the percentage of each score based on 25%
        quiz_score = (sum(quizzes)/len(quizzes)) * 0.25
        assignment_score = (sum(assignments)/len(assignments)) * 0.25
        midterm_score = midterm * 0.25
        final_score = final * 0.25

        # calculate total score
        total_score = quiz_score + midterm_score + assignment_score + final_score
        # print("q =", quizzes, quiz_score)
        # print("assign =", assignments, assignment_score)
        # print("midterm, final", midterm_score, final_score)
        # print("total_score", total_score)
        if total_score >= 60:
            my_dictionary[name] = "pass"
        else:
            my_dictionary[name] = "fail"
    return my_dictionary

 
 
 
